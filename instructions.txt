For each of the problems below, create a new HTML file, "problem_x.html", where "x" is the problem number.

E.g. you should create "problem_1.html" to solve problem 1, and so on.

#1
	"Looping a Triangle". EJS pg. 37

#2
	"FizzBuzz". EJS pg. 38

#3
	"Chess Board". EJS pg. 38.

#4

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1500.

(source: https://projecteuler.net/problem=2 with edits)

#5

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, …

By considering the terms in the Fibonacci sequence whose values do not exceed two million, find the sum of the odd-valued terms. (hint: if (a % 2 !== 0) { ... })

#6

Write a guessing game using looping and prompts!

Have the user come up with a number between 1 and 100 (inclusive), but not enter it into the computer. Have the computer guess numbers in that same range, and ask the user if that is the number (e.g. “Is 40 your number?”). You can use prompt text (propmt("is 40 your number")) to accomplish this. If the number is too high, have the user enter “H”. If the number is too low, have the user enter “L”. If the computer guessed the number, have the user enter “Y”, and start a new game. Can you write an efficient algorithm so that the computer will find your number in the minimum number of guesses?
